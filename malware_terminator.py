from argparse import ArgumentParser
from base64 import b64decode
from re import search
from subprocess import DEVNULL, run
from loguru import logger


def publish_commit():
    logger.info("Running commmit.")
    run(["git", "add", "telegram_tokens.txt", "discord_tokens.txt", "webhooks.txt"], stdout=DEVNULL)
    run(["git", "commit", "-m", "adding item."], stdout=DEVNULL)

    logger.info("Running push.")
    run(
        ["git", "push", "--set-upstream", "origin", "master", "--force"], stdout=DEVNULL
    )

    logger.success("Done!!")
    
def append_file(file_name: str, token: str, url: str, with_url=True):
    with open(file_name, "a+") as file:
        if with_url:
            file.write(token.strip() + f' || {url}' + "\n")
        else:
            file.write(token.strip() + '\n')


def main(input_arg: str, url: str):
    valid_arg = False
    if search(r'\d+:\w+', input_arg):
        logger.info('Telegram token found.')
        append_file('telegram_tokens.txt', input_arg, url, with_url=False)
        valid_arg = True
    
    elif not input_arg.startswith("http"):
        logger.info("bot token detected.")
        user_id = input_arg.split(".")[0]
        if b64decode(user_id + '=' * (-len(user_id) % 4)).decode().isdigit():
            append_file('discord_tokens.txt', input_arg, url)
            valid_arg = True

    else:
        if "webhooks" in input_arg:
            logger.info("Webhook detected.")
            append_file('webhooks.txt', input_arg, url)
            valid_arg = True

    if valid_arg:
        publish_commit()


if __name__ == "__main__":
    parser = ArgumentParser()
    parser.add_argument('input_arg', help='Support: discord bot token, telegram bot token, and discord webhook.')
    parser.add_argument('-u', '--url', required=False)

    args = parser.parse_args()
    if not args.url:
        parser.error('You must provide evidence that this token/url is used for malicious activity.')
    
    input_arg = args.input_arg.strip()
    url = args.url.strip()
    main(input_arg, url)
